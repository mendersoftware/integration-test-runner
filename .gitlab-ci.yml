variables:
  DOCKER_REPOSITORY: mendersoftware/integration-test-runner

stages:
  - test
  - build
  - publish
  - sync

include:
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-lint.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-golang-unittests.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-docker-build.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-github-status-updates.yml'
  - project: 'Northern.tech/Mender/mendertesting'
    file: '.gitlab-ci-check-docker-deploy.yml'


test:unit:
  script:
    - pip install PyGithub

    - git config --global user.email test@example.com
    - git config --global user.name  mendertester

    # Clone this for use in certain tests.
    - git clone --depth 1 https://github.com/mendersoftware/integration
    - export INTEGRATION_DIRECTORY="$(realpath integration)"

    - go list ./... | grep -v vendor | xargs -n1 -I {} go test -v -covermode=atomic -coverprofile=../../../{}/coverage.txt {} 2>&1 | tee /dev/stderr | go-junit-report > ${CI_PROJECT_DIR}/test-results.xml || exit $?
    - mkdir -p tests/unit-coverage && find . -name 'coverage.txt' -exec cp --parents {} ./tests/unit-coverage \;
    - tar -cvf ${CI_PROJECT_DIR}/unit-coverage.tar tests/unit-coverage

test:acceptance_tests:
  stage: test
  tags:
    - docker
  image: tiangolo/docker-with-compose
  services:
    - docker:dind
  variables:
    DOCKER_HOST: "tcp://docker:2376"
    DOCKER_CERT_PATH: "/certs/client"
    DOCKER_TLS_VERIFY: "1"
    DOCKER_TLS_CERTDIR: "/certs"
  script:
    - make acceptance-testing-build
    - make acceptance-testing-up
    - sh -c "sleep 30"
    - make acceptance-testing-run
  after_script:
    - make acceptance-testing-logs
    - make acceptance-testing-down
  artifacts:
    expire_in: 2w
    paths:
      - tests/coverage-acceptance.txt
    when: always

publish:acceptance:
  stage: publish
  except:
    - /^saas-[a-zA-Z0-9.]+$/
  image: golang:1.14-alpine3.11
  needs:
    - job: test:acceptance_tests
      artifacts: true
  before_script:
    - apk add --no-cache git
    # Run go get out of the repo to not modify go.mod
    - cd / && go get github.com/mattn/goveralls && cd -
    # Coveralls env variables:
    #  According to https://docs.coveralls.io/supported-ci-services
    #  we should set CI_NAME, CI_BUILD_NUMBER, etc. But according
    #  to goveralls source code (https://github.com/mattn/goveralls)
    #  many of these are not supported. Set CI_BRANCH,
    #  and pass few others as command line arguments.
    #  See also https://docs.coveralls.io/api-reference
    - export CI_BRANCH=${CI_COMMIT_BRANCH}
  script:
    - goveralls
      -repotoken ${COVERALLS_TOKEN}
      -service gitlab-ci
      -jobid $CI_PIPELINE_ID
      -covermode set
      -flagname acceptance
      -parallel
      -coverprofile ./tests/coverage-acceptance.txt

sync:image:
  variables:
    TARGET_MANIFEST_FILE: "kubernetes/mender-test-runner/test-runner-deployment.yaml"
